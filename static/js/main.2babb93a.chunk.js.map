{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/Iphone-spinner-2.gif","components/spinner/Spiner.js","components/randomChar/RandomChar.js","components/charList/charItem/CharItem.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/thor.jpeg","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offSet","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","length","ErrorMessage","style","display","width","height","objectFit","margin","src","errorImg","alt","Spinner","logo","alignSelf","RandomChar","state","loading","error","marvelService","componentDidMount","setState","updateChar","onChartLoaded","onError","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","img","split","indexOf","CharItem","onCharSelected","CharList","newItemLoading","charEnded","onRequest","onCharLoading","newCharList","ended","item","index","props","disabled","Skeleton","CharInfo","componentDidUpdate","prevProps","prevState","charId","skeleton","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAqBeA,EAnBG,WACd,OACI,yBAAQC,UAAU,cAAlB,UACI,oBAAIA,UAAU,aAAd,SACI,oBAAGC,KAAK,IAAR,UACI,0CADJ,2BAIJ,qBAAKD,UAAU,YAAf,SACI,+BACI,6BAAI,mBAAGC,KAAK,IAAR,0BADR,IAGI,6BAAI,mBAAGA,KAAK,IAAR,+BCdT,G,MAAA,IAA0B,qC,uBCsC1BC,E,iDArCXC,SAAW,4C,KACXC,QAAU,0C,KACVC,YAAc,I,KAEdC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACMC,MAAMF,GADZ,WACNG,EADM,QAGFC,GAHE,sBAIA,IAAIC,MAAJ,0BAA6BL,EAA7B,qBAA6CG,EAAIG,SAJjD,uBAOGH,EAAII,OAPP,mF,2DAUdC,iB,sBAAmB,0CAAAP,EAAA,6DAAOQ,EAAP,+BAAgB,EAAKX,YAArB,SACG,EAAKC,YAAL,UAAoB,EAAKH,SAAzB,qCAA8Da,EAA9D,YAAwE,EAAKZ,UADhF,cACTM,EADS,yBAERA,EAAIO,KAAKC,QAAQC,IAAI,EAAKC,sBAFlB,2C,KAKnBC,a,uCAAe,WAAMC,GAAN,eAAAd,EAAA,sEACO,EAAKF,YAAL,UAAoB,EAAKH,SAAzB,sBAA+CmB,EAA/C,YAAqD,EAAKlB,UADjE,cACLM,EADK,yBAEJ,EAAKU,oBAAoBV,EAAIO,KAAKC,QAAQ,KAFtC,2C,2DAKfE,oBAAsB,SAAAG,GAClB,MAAO,CACHD,GAAIC,EAAKD,GACTE,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,YAAL,UAAsBF,EAAKE,YAAYC,MAAM,EAAE,KAA/C,OAA2D,6CACxEC,UAAWJ,EAAKI,UAAUC,KAAO,IAAML,EAAKI,UAAUE,UACtDC,SAAUP,EAAKQ,KAAK,GAAGxB,IACvByB,KAAMT,EAAKQ,KAAK,GAAGxB,IACnB0B,OAAQV,EAAKU,OAAOC,MAAMC,OAAS,EAAKZ,EAAKU,OAAOC,MAAMR,MAAM,EAAG,GAAKH,EAAKU,OAAOC,SCjCjF,MAA0B,kCCe1BE,EAbM,WAQjB,OACI,qBAAKC,MARa,CAClBC,QAAS,QACTC,MAAO,QACPC,OAAQ,QACRC,UAAW,UACXC,OAAQ,UAGmBC,IAAKC,EAAUC,IAAI,WCXvC,MAA0B,6CCc1BC,EAZC,WAOZ,OACI,qBAAKH,IAAKI,EAAMV,MAPF,CACdC,QAAS,OACTI,OAAQ,SACRM,UAAW,UAIuBH,IAAI,UCFxCI,E,4MACFC,MAAQ,CACJ3B,KAAM,GACN4B,SAAS,EACTC,OAAO,G,EAGXC,cAAgB,IAAInD,E,EAEpBoD,kBAAoB,WAChB,EAAKC,SAAS,CAACJ,SAAS,IACxB,EAAKK,c,EAGTC,cAAgB,SAAAlC,GACZ,EAAKgC,SAAS,CAAChC,OAAM4B,SAAS,K,EAGlCO,QAAU,WACN,EAAKH,SAAS,CAACJ,SAAS,EAAOC,OAAO,K,EAG1CI,WAAa,WACT,IAAMlC,EAAKqC,KAAKC,MAAM,IAAAD,KAAKE,SAAiC,QAC5D,EAAKR,cACAhC,aAAaC,GACbwC,KAAK,EAAKL,eACVM,MAAM,EAAKL,U,4CAGpB,WACI,MAA+BM,KAAKd,MAA7B3B,EAAP,EAAOA,KAAM4B,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,MAChBa,EAAeb,EAAQ,cAAC,EAAD,IAAkB,KACzCc,EAAUf,EAAU,cAAC,EAAD,IAAa,KACjCgB,EAAYhB,GAAWC,EAA+B,KAAtB,cAAC,EAAD,CAAM7B,KAAMA,IAElD,OACI,sBAAKvB,UAAU,aAAf,UACKiE,EACAC,EACAC,EACD,sBAAKnE,UAAU,qBAAf,UACI,oBAAGA,UAAU,oBAAb,wCAC+B,uBAD/B,4CAIA,mBAAGA,UAAU,oBAAb,mCAGA,wBAAQA,UAAU,sBAAlB,SACI,qBAAKA,UAAU,QAAQoE,QAASJ,KAAKV,kBAArC,sBAEJ,qBAAKX,IAAK0B,EAASxB,IAAI,UAAU7C,UAAU,qC,GApDtCsE,aA2DnBC,EAAO,SAAC,GAAY,IAAXhD,EAAU,EAAVA,KACJC,EAAgDD,EAAhDC,KAAMC,EAA0CF,EAA1CE,YAAaE,EAA6BJ,EAA7BI,UAAWG,EAAkBP,EAAlBO,SAAUE,EAAQT,EAARS,KACzCwC,EAAM7C,EAAU8C,MAAM,KAAKC,QAAQ,2BAEzC,OACI,sBAAK1E,UAAU,oBAAf,UACI,qBAAK2C,IAAKhB,EAAWkB,IAAI,mBAAmBR,MAAOmC,EAAM,EAAI,CAAC/B,UAAW,WAAa,KAAOzC,UAAU,oBACvG,sBAAKA,UAAU,mBAAf,UACI,mBAAGA,UAAU,mBAAb,SAAiCwB,IACjC,mBAAGxB,UAAU,oBAAb,SACKyB,IAEL,sBAAKzB,UAAU,mBAAf,UACI,mBAAGC,KAAM6B,EAAU9B,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAGC,KAAM+B,EAAMhC,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,8BAQTiD,I,OCnFA0B,G,MATE,SAAC,GAA4B,IAA3BpD,EAA0B,EAA1BA,KAAMqD,EAAoB,EAApBA,eACrB,OACI,qBAAI5E,UAAU,aAAaoE,QAAS,kBAAMQ,EAAerD,EAAKD,KAA9D,UACI,qBAAKqB,IAAKpB,EAAKI,UAAWkB,IAAKtB,EAAKC,OACpC,qBAAKxB,UAAU,aAAf,SAA6BuB,EAAKC,YCgF/BqD,E,4MA3EX3B,MAAQ,CACJ3B,KAAM,GACN4B,SAAS,EACTC,OAAO,EACP0B,gBAAgB,EAChB9D,OAAQ,IACR+D,WAAW,G,EAGf1B,cAAgB,IAAInD,E,EAEpBoD,kBAAoB,WAChB,EAAK0B,a,EAGTA,UAAY,SAAAhE,GACR,EAAKiE,gBACL,EAAK5B,cACAtC,iBAAiBC,GACjB8C,KAAK,EAAKL,eACVM,MAAM,EAAKL,U,EAGpBuB,cAAgB,WACZ,EAAK1B,SAAS,CAACuB,gBAAgB,K,EAGnCrB,cAAgB,SAAAyB,GACZ,IAAIC,GAAQ,EAETD,EAAY/C,OAAS,IACpBgD,GAAQ,GAGZ,EAAK5B,UAAS,gBAAEhC,EAAF,EAAEA,KAAMP,EAAR,EAAQA,OAAR,MAAqB,CAC/BO,KAAK,GAAD,mBAAMA,GAAN,YAAe2D,IACnB/B,SAAS,EACT2B,gBAAgB,EAChB9D,OAAQA,EAAS,EACjB+D,UAAWI,O,EAInBzB,QAAU,WACN,EAAKH,SAAS,CAACJ,SAAS,EAAOC,OAAO,K,4CAG1C,WAAU,IAAD,OACL,EAAkEY,KAAKd,MAAhE3B,EAAP,EAAOA,KAAM4B,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,MAAO0B,EAA7B,EAA6BA,eAAgB9D,EAA7C,EAA6CA,OAAQ+D,EAArD,EAAqDA,UAC/Cd,EAAeb,EAAQ,cAAC,EAAD,IAAkB,KACzCc,EAAUf,EAAU,cAAC,EAAD,IAAa,KAEvC,OACI,sBAAKnD,UAAU,aAAf,UACKkE,EACAD,EACD,oBAAIjE,UAAU,aAAd,SACKuB,EAAKJ,KAAI,SAACiE,EAAMC,GACb,OACI,cAAC,EAAD,CAAwB9D,KAAM6D,EAAMR,eAAgB,EAAKU,MAAMV,gBAAhDQ,EAAK9D,SAIhC,wBACItB,UAAU,mCACVuF,SAAUT,EACVzC,MAAO,CAAC,QAAW0C,EAAY,OAAS,SACxCX,QAAS,kBAAM,EAAKY,UAAUhE,IAJlC,SAKI,qBAAKhB,UAAU,QAAf,gC,GArEGsE,aCWRkB,G,MAjBE,WACb,OACI,qCACI,mBAAGxF,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCCLzByF,G,MCRS,I,4MDSXvC,MAAQ,CACJ3B,KAAM,KACN4B,SAAS,EACTC,OAAO,G,EAGXC,cAAgB,IAAInD,E,EAEpBoD,kBAAoB,WAChB,EAAKE,c,EAGTkC,mBAAqB,SAACC,EAAWC,GAC1B,EAAKN,MAAMO,SAAWF,EAAUE,QAC/B,EAAKrC,c,EAIbC,cAAgB,SAAAlC,GACZ,EAAKgC,SAAS,CAAChC,OAAM4B,SAAS,K,EAGlC8B,cAAgB,WACZ,EAAK1B,SAAS,CAACJ,SAAS,K,EAG5BO,QAAU,WACN,EAAKH,SAAS,CAACJ,SAAS,EAAOC,OAAO,K,EAG1CI,WAAa,WACT,IAAOqC,EAAU,EAAKP,MAAfO,OACHA,IAIJ,EAAKZ,gBAEL,EAAK5B,cACAhC,aAAawE,GACb/B,KAAK,EAAKL,eACVM,MAAM,EAAKL,W,4CAGpB,WACI,MAA+BM,KAAKd,MAA7B3B,EAAP,EAAOA,KAAM4B,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,MAChB0C,EAAWvE,GAAQ4B,GAAWC,EAAQ,KAAO,cAAC,EAAD,IAC7Ca,EAAeb,EAAQ,cAAC,EAAD,IAAkB,KACzCc,EAAUf,EAAU,cAAC,EAAD,IAAa,KACjCgB,EAAYhB,GAAWC,IAAU7B,EAA8B,KAAtB,cAAC,EAAD,CAAMA,KAAMA,IAE3D,OACI,sBAAKvB,UAAU,aAAf,UACK8F,EACA7B,EACAC,EACAC,S,GAzDMG,cA+DjBC,EAAO,SAAC,GAAY,IAAXhD,EAAU,EAAVA,KACJC,EAAwDD,EAAxDC,KAAMC,EAAkDF,EAAlDE,YAAaE,EAAqCJ,EAArCI,UAAWG,EAA0BP,EAA1BO,SAAUE,EAAgBT,EAAhBS,KAAMC,EAAUV,EAAVU,OAC/CuC,EAAM7C,EAAU8C,MAAM,KAAKC,QAAQ,2BAEzC,OACI,qCACI,sBAAK1E,UAAU,eAAf,UACI,qBAAK2C,IAAKhB,EAAWkB,IAAKrB,EAAMa,MAAOmC,EAAM,EAAI,CAAC/B,UAAW,WAAa,OACtE,gCACI,qBAAKzC,UAAU,kBAAf,SAAkCwB,IAClC,sBAAKxB,UAAU,aAAf,UACI,mBAAGC,KAAM6B,EAAU9B,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAGC,KAAM+B,EAAMhC,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,6BAKhB,qBAAKA,UAAU,cAAf,SACKyB,IAEL,qBAAKzB,UAAU,eAAf,qBACA,qBAAIA,UAAU,oBAAd,UACKiC,EAAOE,OAAS,EAAI,KAAO,yCAExBF,EAAOd,KAAI,SAACiE,EAAMC,GACd,OACI,oBAAgBrF,UAAU,oBAA1B,SACKoF,EAAK5D,MADD6D,aAY1BI,IEhHA,MAA0B,mCCoC1BM,E,4MA3BX7C,MAAQ,CACJ8C,aAAc,M,EAGlBpB,eAAiB,SAAAtD,GACb,EAAKiC,SAAS,CACVyC,aAAc1E,K,4CAItB,WACI,OACI,sBAAKtB,UAAU,MAAf,UACI,cAAC,EAAD,IACA,iCACI,cAAC,EAAD,IACA,sBAAKA,UAAU,gBAAf,UACI,cAAC,EAAD,CAAU4E,eAAgBZ,KAAKY,iBAC/B,cAAC,EAAD,CAAUiB,OAAQ7B,KAAKd,MAAM8C,kBAEjC,qBAAKhG,UAAU,gBAAgB2C,IAAKsD,EAAYpD,IAAI,qB,GArBtDyB,a,MCHlB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2babb93a.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=f3007f885b4eb15d26b691a0fe61d0bb';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offSet = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offSet}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async id => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = char => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0,210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items.length > 5 ?  char.comics.items.slice(0, 5) : char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    const errorImgStyle = {\r\n        display: 'block',\r\n        width: '250px',\r\n        height: '250px',\r\n        objectFit: 'contain',\r\n        margin: '0 auto',\r\n    }\r\n    return (\r\n        <img style={errorImgStyle} src={errorImg} alt=\"error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/Iphone-spinner-2.d3fbaf2b.gif\";","import logo from '../../resources/img/Iphone-spinner-2.gif'\r\n\r\nconst Spinner = () => {\r\n    const inlileImg = {\r\n        display: 'flex',\r\n        margin: 0 + ' auto',\r\n        alignSelf: 'center'\r\n    }\r\n\r\n    return(\r\n        <img src={logo} style={inlileImg} alt=\"logo\" ></img>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import { Component } from 'react';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spiner';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount = () => {\n        this.setState({loading: true});\n        this.updateChar();\n    }\n\n    onChartLoaded = char => {\n        this.setState({char, loading: false});\n    }\n\n    onError = () => {\n        this.setState({loading: false, error: true});\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onChartLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\" onClick={this.componentDidMount}>try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    const img = thumbnail.split('/').indexOf('image_not_available.jpg');\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" style={img > 1 ? {objectFit: 'contain'} : null } className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","const CharItem = ({char, onCharSelected}) => {\r\n    return(\r\n        <li className=\"char__item\" onClick={() => onCharSelected(char.id)}>\r\n            <img src={char.thumbnail} alt={char.name}/>\r\n            <div className=\"char__name\">{char.name}</div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default CharItem;","import { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\nimport CharItem from './charItem/CharItem.js'\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spiner';\n\nclass CharList extends Component {\n    state = {\n        char: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offSet: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount = () => {\n        this.onRequest();\n    }\n\n    onRequest = offSet => {\n        this.onCharLoading();\n        this.marvelService\n            .getAllCharacters(offSet)\n            .then(this.onChartLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoading = () => {\n        this.setState({newItemLoading: true});\n    }\n\n    onChartLoaded = newCharList => {\n        let ended = false;\n\n        if(newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({char, offSet}) => ({\n            char: [...char, ...newCharList], \n            loading: false,\n            newItemLoading: false,\n            offSet: offSet + 9,\n            charEnded: ended\n        }));\n    }\n\n    onError = () => {\n        this.setState({loading: false, error: true});\n    }\n\n    render() {\n        const {char, loading, error, newItemLoading, offSet, charEnded} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n\n        return (\n            <div className=\"char__list\">\n                {spinner}\n                {errorMessage}\n                <ul className=\"char__grid\">\n                    {char.map((item, index) => {\n                        return (\n                            <CharItem key={item.id} char={item} onCharSelected={this.props.onCharSelected}/>\n                        )\n                    })}\n                </ul>\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'npne' : 'block'}}\n                    onClick={() => this.onRequest(offSet)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport Spinner from '../spinner/Spiner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport './charInfo.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport MarvelService from '../../services/MarvelService';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount = () => {\n        this.updateChar();\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if(this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    onChartLoaded = char => {\n        this.setState({char, loading: false});\n    }\n\n    onCharLoading = () => {\n        this.setState({loading: true});\n    }\n\n    onError = () => {\n        this.setState({loading: false, error: true});\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if(!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onChartLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    const img = thumbnail.split('/').indexOf('image_not_available.jpg');\n\n    return(\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={img > 1 ? {objectFit: 'contain'} : null }/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    {comics.length > 0 ? null : 'There is no comics with this character'}\n                    {\n                        comics.map((item, index) => {\n                            return(\n                                <li key={index} className=\"char__comics-item\">\n                                    {item.name}\n                                </li>\n                            )\n                        })\n                    }\n                    \n                </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/thor.533e3a5e.jpeg\";","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport { Component } from \"react\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null \n    }\n\n    onCharSelected = id => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <RandomChar/>\n                    <div className=\"char__content\">\n                        <CharList onCharSelected={this.onCharSelected}/>\n                        <CharInfo charId={this.state.selectedChar}/>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}